### Starting build.
# Target: exp_test.ml.depends, tags: { extension:ml, file:exp_test.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -modules exp_test.ml > exp_test.ml.depends # cached
# Target: exp_lex.mll, tags: { extension:mll, file:exp_lex.mll, lexer, ocaml, ocamllex, quiet, traverse }
/home/teo/.opam/4.03.0/bin/ocamllex.opt -q exp_lex.mll # cached
# Target: exp_lex.ml.depends, tags: { extension:ml, file:exp_lex.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -modules exp_lex.ml > exp_lex.ml.depends # cached
# Target: exp_par.mly.depends, tags: { extension:mly, file:exp_par.mly, infer, menhir_ocamldep, ocaml, ocamldep, quiet, traverse }
menhir --raw-depend --ocamldep 'ocamlfind ocamldep -modules' exp_par.mly > exp_par.mly.depends
+ menhir --raw-depend --ocamldep 'ocamlfind ocamldep -modules' exp_par.mly > exp_par.mly.depends
File "exp_par.mly", line 31, characters 7-12:
Warning: the token COMMA is unused.
# Target: syntax.ml.depends, tags: { extension:ml, file:syntax.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -modules syntax.ml > syntax.ml.depends # cached
# Target: syntax.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:syntax.cmo, file:syntax.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -o syntax.cmo syntax.ml # cached
# Target: exp_par.mly, tags: { byte, compile, extension:ml, extension:mly, file:exp_par.ml, file:exp_par.mly, infer, menhir, ocaml, parser, quiet, traverse }
menhir --ocamlc 'ocamlfind ocamlc' --infer exp_par.mly
+ menhir --ocamlc 'ocamlfind ocamlc' --infer exp_par.mly
File "exp_par.mly", line 31, characters 7-12:
Warning: the token COMMA is unused.
File "exp_par.mly", line 50, characters 0-5:
Warning: the precedence level assigned to COMMA is never useful.
Warning: 2 states have shift/reduce conflicts.
Warning: 2 shift/reduce conflicts were arbitrarily resolved.
# Target: exp_par.mli.depends, tags: { extension:mli, file:exp_par.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -modules exp_par.mli > exp_par.mli.depends
# Target: exp_par.cmi, tags: { byte, compile, extension:mli, file:exp_par.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -o exp_par.cmi exp_par.mli
# Target: exp_lex.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:exp_lex.cmo, file:exp_lex.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -o exp_lex.cmo exp_lex.ml
# Target: exp_test.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:exp_test.cmo, file:exp_test.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -o exp_test.cmo exp_test.ml
+ ocamlfind ocamlc -c -o exp_test.cmo exp_test.ml
File "exp_test.ml", line 10, characters 5-16:
Error: This variant pattern is expected to have type exn
       The constructor SyntaxError does not belong to type exn
Command exited with code 2.
# Compilation unsuccessful.
