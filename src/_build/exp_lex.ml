# 1 "exp_lex.mll"
 
open Exp_par
exception SyntaxError of string 

# 7 "exp_lex.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\224\255\225\255\001\000\001\000\000\000\000\000\001\000\
    \233\255\002\000\001\000\002\000\004\000\005\000\006\000\242\255\
    \243\255\244\255\245\255\246\255\247\255\248\255\249\255\250\255\
    \251\255\062\000\020\000\254\255\001\000\003\000\160\000\241\255\
    \240\255\239\255\238\255\237\255\236\255\231\255\000\000\232\255\
    \002\000\005\000\230\255\002\000\001\000\009\000\229\255\002\000\
    \003\000\000\000\001\000\008\000\011\000\006\000\228\255\039\000\
    \044\000\226\255\050\000\046\000\042\000\002\000\080\000\076\000\
    \071\000\227\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\030\000\030\000\030\000\030\000\030\000\
    \255\255\030\000\030\000\020\000\021\000\030\000\030\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\030\000\002\000\255\255\001\000\000\000\003\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255";
  Lexing.lex_default = 
   "\002\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\255\255\255\255\000\000\255\255\255\255\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\
    \255\255\255\255\000\000\255\255\255\255\255\255\000\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\000\000\255\255\
    \255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\029\000\027\000\027\000\029\000\028\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \029\000\011\000\000\000\029\000\000\000\000\000\010\000\035\000\
    \020\000\019\000\016\000\018\000\024\000\017\000\000\000\015\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\000\000\023\000\014\000\012\000\013\000\034\000\
    \008\000\033\000\032\000\031\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\025\000\
    \051\000\062\000\000\000\049\000\050\000\006\000\047\000\037\000\
    \043\000\007\000\042\000\044\000\040\000\045\000\046\000\038\000\
    \003\000\052\000\004\000\058\000\039\000\041\000\048\000\005\000\
    \055\000\053\000\054\000\022\000\009\000\021\000\036\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\056\000\057\000\059\000\060\000\030\000\061\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\063\000\064\000\065\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\000\000\000\000\000\000\000\000\030\000\
    \001\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\028\000\029\000\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\255\255\029\000\255\255\255\255\000\000\010\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\000\000\000\000\000\000\000\000\011\000\
    \000\000\012\000\013\000\014\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\000\000\
    \050\000\061\000\255\255\047\000\049\000\000\000\004\000\007\000\
    \005\000\000\000\041\000\043\000\006\000\044\000\045\000\007\000\
    \000\000\051\000\000\000\003\000\038\000\040\000\047\000\000\000\
    \048\000\052\000\053\000\000\000\000\000\000\000\009\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\055\000\056\000\058\000\059\000\025\000\060\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
    \025\000\062\000\063\000\064\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\255\255\255\255\255\255\255\255\030\000\
    \000\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec read lexbuf =
    __ocaml_lex_read_rec lexbuf 0
and __ocaml_lex_read_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 14 "exp_lex.mll"
          ( read lexbuf )
# 168 "exp_lex.ml"

  | 1 ->
# 15 "exp_lex.mll"
            ( read lexbuf )
# 173 "exp_lex.ml"

  | 2 ->
# 16 "exp_lex.mll"
        ( INT (int_of_string (Lexing.lexeme lexbuf)) )
# 178 "exp_lex.ml"

  | 3 ->
# 17 "exp_lex.mll"
      ( ID (Lexing.lexeme lexbuf))
# 183 "exp_lex.ml"

  | 4 ->
# 18 "exp_lex.mll"
        ( COMMA )
# 188 "exp_lex.ml"

  | 5 ->
# 19 "exp_lex.mll"
        ( SEMI_COLLON )
# 193 "exp_lex.ml"

  | 6 ->
# 20 "exp_lex.mll"
        ( LEFT_CURLY_BRACKET )
# 198 "exp_lex.ml"

  | 7 ->
# 21 "exp_lex.mll"
        ( RIGHT_CURLY_BRACKET )
# 203 "exp_lex.ml"

  | 8 ->
# 22 "exp_lex.mll"
        ( LEFT_ROUND_BRACKET )
# 208 "exp_lex.ml"

  | 9 ->
# 23 "exp_lex.mll"
        ( RIGHT_ROUND_BRACKET)
# 213 "exp_lex.ml"

  | 10 ->
# 24 "exp_lex.mll"
        ( PLUS )
# 218 "exp_lex.ml"

  | 11 ->
# 25 "exp_lex.mll"
        ( MINUS )
# 223 "exp_lex.ml"

  | 12 ->
# 26 "exp_lex.mll"
        ( TIMES )
# 228 "exp_lex.ml"

  | 13 ->
# 27 "exp_lex.mll"
        ( DIVIDE )
# 233 "exp_lex.ml"

  | 14 ->
# 28 "exp_lex.mll"
         ( LEQ )
# 238 "exp_lex.ml"

  | 15 ->
# 29 "exp_lex.mll"
         ( GEQ )
# 243 "exp_lex.ml"

  | 16 ->
# 30 "exp_lex.mll"
        ( EQ )
# 248 "exp_lex.ml"

  | 17 ->
# 31 "exp_lex.mll"
         ( NOTEQ )
# 253 "exp_lex.ml"

  | 18 ->
# 32 "exp_lex.mll"
         ( AND )
# 258 "exp_lex.ml"

  | 19 ->
# 33 "exp_lex.mll"
         ( OR )
# 263 "exp_lex.ml"

  | 20 ->
# 34 "exp_lex.mll"
        ( NOT )
# 268 "exp_lex.ml"

  | 21 ->
# 35 "exp_lex.mll"
        ( ASSIGN )
# 273 "exp_lex.ml"

  | 22 ->
# 36 "exp_lex.mll"
        ( DEREF )
# 278 "exp_lex.ml"

  | 23 ->
# 37 "exp_lex.mll"
         ( TYPE )
# 283 "exp_lex.ml"

  | 24 ->
# 38 "exp_lex.mll"
         ( IF )
# 288 "exp_lex.ml"

  | 25 ->
# 39 "exp_lex.mll"
           (ELSE)
# 293 "exp_lex.ml"

  | 26 ->
# 40 "exp_lex.mll"
            ( WHILE )
# 298 "exp_lex.ml"

  | 27 ->
# 41 "exp_lex.mll"
               ( READ )
# 303 "exp_lex.ml"

  | 28 ->
# 42 "exp_lex.mll"
                ( PRINT )
# 308 "exp_lex.ml"

  | 29 ->
# 43 "exp_lex.mll"
            ( DEREF )
# 313 "exp_lex.ml"

  | 30 ->
# 44 "exp_lex.mll"
      ( raise (SyntaxError ("Unexpected char: " ^ Lexing.lexeme lexbuf)) )
# 318 "exp_lex.ml"

  | 31 ->
# 45 "exp_lex.mll"
        ( EOF )
# 323 "exp_lex.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_read_rec lexbuf __ocaml_lex_state

;;

